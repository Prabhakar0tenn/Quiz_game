import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class QuizGame extends JFrame implements ActionListener {

    private ArrayList<Question> questions;
    private JLabel questionLabel;
    private JButton[] optionButtons;
    private int currentQuestionIndex = 0;
    private int score = 0;
    private int level = 1;
    private JTextField nameField;
    private JLabel nameLabel;
    private String playerName = "";

    public QuizGame() {
        setTitle("Quiz Game");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Green and black color scheme
        getContentPane().setBackground(Color.BLACK);

        // Top panel for name entry
        JPanel topPanel = new JPanel();
        topPanel.setBackground(Color.BLACK);
        nameLabel = new JLabel("Enter Your Name:");
        nameLabel.setFont(new Font("SansSerif", Font.BOLD, 18));
        nameLabel.setForeground(Color.GREEN);
        topPanel.add(nameLabel);

        nameField = new JTextField(15);
        nameField.addActionListener(this); // Pressing Enter submits the name
        topPanel.add(nameField);

        add(topPanel, BorderLayout.NORTH);

        // Center panel for questions and options
        JPanel centerPanel = new JPanel();
        centerPanel.setBackground(Color.BLACK);
        centerPanel.setLayout(new BoxLayout(centerPanel, BoxLayout.Y_AXIS));

        questionLabel = new JLabel();
        questionLabel.setFont(new Font("SansSerif", Font.PLAIN, 18));
        questionLabel.setForeground(Color.GREEN);
        centerPanel.add(questionLabel);

        // Option buttons setup - ensure same size and alignment
        optionButtons = new JButton[4];
        JPanel buttonPanel = new JPanel(new GridLayout(2, 2, 10, 10)); // Grid layout for uniform alignment
        buttonPanel.setBackground(Color.BLACK);

        for (int i = 0; i < 4; i++) {
            optionButtons[i] = new JButton();
            optionButtons[i].setActionCommand(String.valueOf(i)); // Set the option index as the action command
            optionButtons[i].addActionListener(this);
            optionButtons[i].setBackground(Color.DARK_GRAY);
            optionButtons[i].setForeground(Color.GREEN);
            optionButtons[i].setFont(new Font("SansSerif", Font.PLAIN, 16));
            optionButtons[i].setPreferredSize(new Dimension(200, 50)); // Set uniform button size
            buttonPanel.add(optionButtons[i]);
        }

        centerPanel.add(buttonPanel);
        add(centerPanel, BorderLayout.CENTER);

        // Load questions and set the first question
        loadQuestions();
        displayQuestion();
    }

    // Load the questions for each level
    private void loadQuestions() {
        questions = new ArrayList<>();

        // Level 1 Questions (Easy)
        questions.add(new Question("What is the capital of France?", "Paris", "Paris", "Berlin", "Madrid", "Rome", 1));
        questions.add(new Question("Who developed Java?", "James Gosling", "James Gosling", "Bill Gates", "Elon Musk", "Mark Zuckerberg", 1));
        questions.add(new Question("What is 2 + 2?", "4", "3", "4", "5", "6", 1));
        questions.add(new Question("Which planet is known as the Red Planet?", "Mars", "Earth", "Venus", "Mars", "Jupiter", 1));

        // Additional 10th-grade level questions (Physics and Chemistry)
        questions.add(new Question("What is the chemical formula for sodium chloride?", "NaCl", "NaCl", "KCl", "HCl", "NaOH", 1));
        questions.add(new Question("What is the SI unit of force?", "Newton", "Pascal", "Joule", "Newton", "Watt", 1));

        // Level 2 Questions (Moderate)
        questions.add(new Question("What is the acceleration due to gravity?", "9.8 m/s²", "9.8 m/s²", "10 m/s²", "5 m/s²", "8.5 m/s²", 2));
        questions.add(new Question("What is the derivative of x²?", "2x", "2x", "x²", "1/x", "2", 2));

        // Additional 12th-grade level questions (Physics and Chemistry)
        questions.add(new Question("What is the atomic number of chlorine?", "17", "16", "17", "18", "20", 2));
        questions.add(new Question("What is Faraday's law of induction?", "Electromagnetic induction", "Law of gravity", "Electromagnetic induction", "Thermodynamics", "Conservation of momentum", 2));

        // Level 3 Questions (Hard)
        questions.add(new Question("What is the speed of light?", "299,792 km/s", "299,792 km/s", "150,000 km/s", "1,000,000 km/s", "299,792 m/s", 3));
        questions.add(new Question("What is Planck's constant?", "6.63e-34 J·s", "6.62e-34 J·s", "6.63e-34 J·s", "6.64e-34 J·s", "6.65e-34 J·s", 3));
    }

    // Display the current question and options
    private void displayQuestion() {
        if (currentQuestionIndex >= questions.size()) {
            JOptionPane.showMessageDialog(this, "Congrats " + playerName + "! You completed Level " + level + "!");
            if (level < 3) {
                level++;
                score = 0; // Reset score for new level
                currentQuestionIndex = 0; // Reset question index
                displayQuestion(); // Load the first question of the next level
            } else {
                JOptionPane.showMessageDialog(this, "You've completed all levels! Well done!");
                System.exit(0); // Exit after completing all levels
            }
            return;
        }

        Question question = questions.get(currentQuestionIndex);

        // Check if player's name has been entered
        if (playerName.isEmpty()) {
            playerName = nameField.getText();
            nameLabel.setText("Welcome, " + playerName + "!");
        }

        // Set question and options
        questionLabel.setText("<html><body>" + question.getQuestionText() + "</body></html>");
        optionButtons[0].setText(question.getOptionA());
        optionButtons[1].setText(question.getOptionB());
        optionButtons[2].setText(question.getOptionC());
        optionButtons[3].setText(question.getOptionD());
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (playerName.isEmpty()) {
            displayQuestion();
            return; // Wait until the name is entered
        }

        // Check if the clicked answer is correct
        Question question = questions.get(currentQuestionIndex);
        JButton clickedButton = (JButton) e.getSource();
        String answer = clickedButton.getText();
        if (answer.equals(question.getCorrectAnswer())) {
            score++;
        }

        // Move to the next question or finish the level
        currentQuestionIndex++;
        if (currentQuestionIndex < 10) { // Ensure 10 questions per level
            displayQuestion();
        } else {
            JOptionPane.showMessageDialog(this, "Congrats " + playerName + "! You completed Level " + level + " with a score of " + score + "/10");
            if (level < 3) {
                level++;
                score = 0; // Reset score for next level
                currentQuestionIndex = 0; // Reset question index for next level
                displayQuestion(); // Display first question of the new level
            } else {
                JOptionPane.showMessageDialog(this, "You've completed all levels! Well done!");
                System.exit(0); // End game after all levels are completed
            }
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            QuizGame quizGame = new QuizGame();
            quizGame.setVisible(true);
        });
    }
}
